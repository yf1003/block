// fronzen

CCEffect %{
  techniques:
  - passes:
    - vert: unlit-vs
      frag: unlit-fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        mainTexture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram unlit-vs %{
  precision highp float;

  #include <builtin/uniforms/cc-global>
  #include <builtin/uniforms/cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram unlit-fs %{
  precision highp float;

  #include <builtin/internal/alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D mainTexture;
  #endif

  void main () {
    // 冰冻
    vec4 color = texture(mainTexture, v_uv0);
    float r = abs(color.r - color.g - color.b) * 1.5;
    float g = abs(color.g - color.b - color.r) * 1.5;
    float b = abs(color.b - color.r - color.g) * 1.5;
    color = vec4(r, g, b, color.a);
		gl_FragColor = color;
  }
}%
