"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.unload=exports.load=void 0;const t=e(require("fs")),n=e(require("path")),a="playable-config";exports.load=async function(){let e=await Editor.Profile.getConfig(a,"langConfigDevtool"),r=await Editor.Profile.getConfig(a,"gameConfigDevtool"),f=await Editor.Profile.getConfig(a,"langConfigPath"),u=await Editor.Profile.getConfig(a,"gameConfigPath"),s=await Editor.Profile.getConfig(a,"gameInterfacePath"),c=await Editor.Profile.getConfig(a,"gameInterfaceConfigScript");if(null==e||""==e)return console.warn("lang config tool not set yet!",e);if(null==r||""==r)return console.warn("game config tool not set yet!",r);if(null==f||""==f)return console.warn("lang config path not set yet!",f);if(null==u||""==u)return console.warn("game config path not set yet!",u);if(null==s||""==s)return console.warn("game interface path not set yet!",s);if(null==c||""==c)return console.warn("game interface path not set yet!",c);const g=Editor.Project.path,d="project://";f.startsWith(d)&&(f=f.substring(10)),u.startsWith(d)&&(u=u.substring(10)),s.startsWith(d)&&(s=s.substring(10)),async function(e,n,a){t.default.existsSync(n)||(await new Promise((e=>i(n,e))),o(e,n,a));t.default.watchFile(n,((t,i)=>{o(e,n,a)}))}(e,`${Editor.Project.path}/lang.xlsx`,n.default.join(g,f)),async function(e,n,a,o,r){t.default.existsSync(n)||(await new Promise((e=>i(n,e))),l(e,n,a,o,r));t.default.watchFile(n,((t,i)=>{l(e,n,a,o,r)}))}(r,`${Editor.Project.path}/gameConfig.xlsx`,n.default.join(g,u),n.default.join(g,s),c)};function i(e,n){t.default.existsSync(e)?n():setTimeout((()=>i(e,n)),1e3)}function o(e,a,i){const o=n.default.join(e,"index"),l=require(o).getLanguagesJson(a);t.default.mkdirSync(n.default.dirname(i),{recursive:!0}),t.default.writeFileSync(i,JSON.stringify(l,null,4)),console.log("tranlsate lang config",i)}function l(e,a,i,o,l){const r=n.default.join(e,"index"),f=require(r).getGameConfigJson(a),u=n.default.basename(Editor.Project.path),s=function(e){const t=function(e){return Array.isArray(e.value)?`${JSON.stringify(e.options).replace(/,/g," | ").replace("[","(").replace("]",")")}[]`:typeof e.value};var n="";if(null!=e.playAgain&&(n+=`\t/** default value: ${e.playAgain} */\n\tplayAgain: ${typeof e.playAgain};\n`),e.gameConfig)for(const a of Object.keys(e.gameConfig)){const i=e.gameConfig[a].items;if(i){n+=`\t${a}: {\n`;for(const e of i)n+=`\t\t/** default value: ${e.value} */\n\t\t${e.pl_key}: ${t(e)};\n`;n+="\t}\n"}else n+=`\t/** default value: ${e.gameConfig[a].value} */\n\t${a}: ${t(e.gameConfig[a])};\n`}return n}(f);l=(l=l.replace("${projectName}",u)).replace("${tsConfig}",s),t.default.mkdirSync(n.default.dirname(i),{recursive:!0}),t.default.writeFileSync(i,JSON.stringify(f,null,4)),t.default.mkdirSync(n.default.dirname(o),{recursive:!0}),t.default.writeFileSync(o,l),console.log("tranlsate game config",i)}exports.unload=async function(){t.default.unwatchFile(`${Editor.Project.path}/lang.xlsx`),t.default.unwatchFile(`${Editor.Project.path}/gameConfig.xlsx`)};