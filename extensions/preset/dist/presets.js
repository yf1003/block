"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.unload=exports.load=exports.methods=void 0;const t=e(require("chokidar")),s=e(require("fs")),o=e(require("path")),n=require("./config");let i;var a;async function r(e,t){const i={assetPath:"presets",presets:{}},a=s.default.readdirSync(e,{withFileTypes:!0});for(const t of a){if(!t.isDirectory())continue;const n=o.default.join(e,t.name),a=[];for(const e of s.default.readdirSync(n,{withFileTypes:!0}))e.isDirectory()&&a.push({value:e.name});0!=a.length&&(i.presets[t.name]={value:a[0].value,options:a})}if(a.length>0){const e=await Editor.Profile.getConfig(n.PRESET_PACKAGE_NAME,n.PRESET_CONFIG_DATA,"local");l(i,null==e?null:JSON.parse(e),t)}}function l(e,t,n){if(null!=t)for(const s of Object.keys(e.presets)){if(null==t[s])continue;e.presets[s].displayName=t[s].displayName;const o=t[s].options;for(const t of e.presets[s].options){const e=o.find((e=>e.value==t.value));null!=e&&(t.displayName=e.displayName)}e.presets[s].options.find((e=>e.value==t[s].value))&&(e.presets[s].value=t[s].value)}s.default.mkdirSync(o.default.dirname(n),{recursive:!0}),s.default.writeFileSync(n,JSON.stringify(e),{encoding:"utf8"}),console.log("tranlsate preset config",n)}exports.methods={openPanel(){Editor.Panel.open(n.PRESET_PACKAGE_NAME)},getConfigPath:()=>i,savePresetConfig(e){l(e,null,i),Editor.Message.send("asset-db","reimport-asset",i)}},exports.load=async function(){const e=Editor.Project.path;let l=await Editor.Profile.getConfig(n.PLAYABLE_CONFIG_PACKAGE_NAME,"presetConfigPath");const u="project://";l.startsWith(u)&&(l=l.substring(10)),i=o.default.join(e,l);const d=o.default.join(e,"assets/presets");(a=t.default.watch(d,{persistent:!0,depth:1,ignoreInitial:!0})).on("addDir",(e=>{r(d,i)})),a.on("unlinkDir",(e=>{r(d,i)})),s.default.existsSync(d)?r(d,i):s.default.existsSync(i)&&s.default.rmSync(i)},exports.unload=async function(){await(null==a?void 0:a.close())};